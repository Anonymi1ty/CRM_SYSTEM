<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                            http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--扫描组件（除了控制层）-->
    <context:component-scan base-package="mapper,pojo,service"></context:component-scan>

    <!--引入外部文件配置连接池-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
    <!--获取数据库配置信息-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入DataSource-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--
        开启事务注解驱动
        将使用注解@Transaction标识的方法开启事务管理
    -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--配置SQLSessionFactoryBean-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--设置mybatis核心配置文件路径-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--设置数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--类型别名所对应的包-->
        <property name="typeAliasesPackage" value="pojo"></property>
        <!--设置映射文件了路径，只有映射文件的包和Mapper接口包不一致需要设置-->
        <!--        <property name="mapperLocations" value="classpath:"></property>-->
    </bean>

    <!--
    配置Mapper接口的扫描，可以将指定包下的所有Mapper接口通过SqlSession对象创造代理实现类，
    交给IOC容器进行管理
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="mapper"></property>
    </bean>
</beans>